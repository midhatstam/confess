version: 2.1
executors:
      docker-publisher:
        environment:
          IMAGE_NAME: midhatstam/konfess
        docker:
          - image: circleci/buildpack-deps:stretch
jobs:
  build-job:
    docker:
      - image: circleci/python:3.6.8
      - image: circleci/postgres:12.0
    environment:
      DATABASE_URL: postgres://postgres:@localhost/circle_test
      DJANGO_SECRET_KEY: ef+-3suc6+7wh%-n1hr71v83-5wvu7)dl8au#w9fe@4jd-af3#
      DJANGO_READ_DOT_ENV_FILE: True
      DJANGO_SETTINGS_MODULE: confess.settings
    working_directory: ~/code
    steps:
      - checkout
      - restore_cache:
          key: v001-code-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v001-code-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - 'venv'
      - run:
          name: Migrate
          command: |
            . venv/bin/activate
            python manage.py migrate
      - run:
          name: Static analysis
          command: |
            . venv/bin/activate
            pip install pylint flake8
            pylint ./ --output-format=parseable --exit-zero > pylint.log
            flake8 ./ --format=pylint --exit-zero > flake8.log
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            tox
  heroku-deploy-job:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
  build-docker-image-job:
    executor: docker-publisher
    working_directory: ~/code
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-docker-image-job:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
  server-deploy:
    steps:
      - run:
          name: Deploy to server
          command: |
            . venv/bin/activate
            ansible-playbook -i hosts confess-ansible/api/deploy.yml

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - heroku-deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only:
                - master
      - build-docker-image-job:
          requires:
            - heroku-deploy-job
          filters:
            branches:
              only:
               master
      - publish-docker-image-job:
          requires:
            - build-docker-image-job
          filters:
            branches:
              only:
                - master
#      - deploy-job:
#          requires:
#            - build-job
#          filters:
#            branches:
#              only:
#                - develop
#                - master
