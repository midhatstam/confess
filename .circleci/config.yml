version: 2
jobs:
  build-job:
    docker:
      - image: circleci/python:3.8.0
      - image: circleci/postgres:12.0
    environment:
      DATABASE_URL: postgres://postgres:@localhost/circle_test
      DJANGO_SECRET_KEY: ef+-3suc6+7wh%-n1hr71v83-5wvu7)dl8au#w9fe@4jd-af3#
      DJANGO_READ_DOT_ENV_FILE: True
      DJANGO_SETTINGS_MODULE: confess.settings
    working_directory: ~/code
    steps:
      - checkout
#      - restore_cache:
#          key: v001-code-{{ .Branch }}-{{ checksum "requirements.txt" }}
#      - run:
#          name: Install Python dependencies
#          command: |
#            python3 -m venv venv
#            . venv/bin/activate
#            pip install -r requirements.txt
#      - save_cache:
#          key: v001-code-{{ .Branch }}-{{ checksum "requirements.txt" }}
#          paths:
#            - 'venv'
#      - run:
#          name: Migrate
#          command: |
#            python manage.py migrate
#      - run:
#          name: Add python project to path
#          command: 'echo "$(realpath .)/code" > venv/lib/python3.7/site-packages/code.pth'
      - setup_remote_docker
      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker system prune -a --volumes -f
            docker-compose up --build -d
      - run:
          name: Run container
          command: |
            docker run -d code_web
      - run:
          name: Run tests
          command: |
            docker exec -it code_web ls
  deploy-job:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

#  deploy-job:
#    docker:
#      # Important to note that we're using 2.7 here. This is because at the time of
#      # writing, Fabric doesn't work with Python 3
#      - image: circleci/python:2.7
#    working_directory: ~/code
#    steps:
#      - checkout
#      - run:
#          name: Deploy via Fabric
#          command: |
#            sudo pip install fabric==1.14.0
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              fab -f .circleci/deploy.py -i ~/.ssh/id_rsa production deploy
#            else
#              fab -f .circleci/deploy.py -i ~/.ssh/id_rsa staging deploy
#            fi



workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only:
                - master
#      - deploy-job:
#          requires:
#            - build-job
#          filters:
#            branches:
#              only:
#                - develop
#                - master
